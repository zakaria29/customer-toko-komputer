{"version":3,"sources":["config.js","pages/Login.js","components/Navbar.js","components/ProductList.js","pages/Product.js","components/TransactionList.js","pages/Transaction.js","pages/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["base_url","Login","event","preventDefault","sendData","username","state","password","axios","post","then","response","setState","logged","data","customer","token","localStorage","setItem","JSON","stringify","props","history","push","message","catch","error","console","log","className","this","onSubmit","ev","type","value","onChange","target","autoComplete","React","Component","Navbar","Logout","removeItem","window","location","data-toggle","data-target","id","to","onClick","ProductList","src","image","height","width","alt","name","price","stock","onCart","Product","headerConfig","headers","Authorization","getProduct","get","products","status","alert","addToCart","selectedItem","tempCart","getItem","parse","find","item","product_id","promptJumlah","prompt","qty","bind","map","product_image_url","TransactionList","getAmount","total","it","Number","convertTime","time","date","Date","getDate","getMonth","getFullYear","customer_name","customer_address","transaction_id","index","product","colSpan","Transaction","getTransaction","url","customer_id","transaction","transaksi_id","address","waktu","detail_transaksi","Cart","initCart","customerID","customerName","totalHarga","cart","editItem","findIndex","dropItem","confirm","splice","checkOut","disabled","length","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d4abff6b.chunk.js","sourcesContent":["const base_url = \"http://168.138.182.251:8080/store/api/v1\"\r\nconst product_image_url = \"http://168.138.182.251:8080/product_image/\"\r\nconst customer_image_url = \"http://168.138.182.251:8080/image/\"\r\nexport {\r\n    base_url,\r\n    product_image_url,\r\n    customer_image_url\r\n}","import axios from \"axios\"\r\nimport React from \"react\"\r\nimport { base_url } from \"../config.js\";\r\n\r\nexport default class Login extends React.Component{\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            message: \"\",\r\n            logged: true\r\n        }\r\n    }\r\n\r\n    Login = event => {\r\n        event.preventDefault()\r\n        let sendData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n\r\n        let url = base_url + \"/customer/auth\"\r\n        \r\n        axios.post(url, sendData)\r\n        .then(response => {\r\n            this.setState({logged: response.data.logged})\r\n            if (this.state.logged) {\r\n                let customer = response.data.data\r\n                let token = response.data.token\r\n                localStorage.setItem(\"customer\", JSON.stringify(customer))\r\n                localStorage.setItem(\"token\", token)\r\n                this.props.history.push(\"/\")\r\n            } else {\r\n                this.setState({message: response.data.message})\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container d-flex h-100 justify-content-center align-items-center\">\r\n                <div className=\"col-sm-6 card my-5\">\r\n                    <div className=\"card-header bg-success text-white text-center\">\r\n                        <h4>Computer Store</h4>\r\n                        <strong className=\"text-warning\">Customer Sign In</strong>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        { !this.state.logged ? \r\n                        (\r\n                            <div className=\"alert alert-danger mt-1\">\r\n                                { this.state.message }\r\n                            </div>\r\n                        ) : null }\r\n                        <form onSubmit={ev => this.Login(ev)}>\r\n                            <input type=\"text\" className=\"form-control mb-1\" value={this.state.username}\r\n                            onChange={ev => this.setState({username: ev.target.value})} />\r\n                            <input type=\"password\" className=\"form-control mb-1\" value={this.state.password}\r\n                            onChange={ev => this.setState({password: ev.target.value})}\r\n                            autoComplete=\"false\" />\r\n\r\n                            <button className=\"btn btn-block btn-primary mb-1\" type=\"submit\">\r\n                                Sign In\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nclass Navbar extends React.Component{\r\n    Logout = () => {\r\n        localStorage.removeItem(\"token\")\r\n        localStorage.removeItem(\"customer\")\r\n        window.location = \"/login\"\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"navbar navbar-expand-lg bg-dark navbar-dark\">\r\n                <a className=\"navbar-brand\">\r\n                    Moklet Computer Store\r\n                </a>\r\n\r\n                {/* show and hide menu */}\r\n                <button className=\"navbar-toggler\" data-toggle=\"collapse\"\r\n                data-target=\"#menu\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                {/* menu */}\r\n                <div id=\"menu\" className=\"navbar-collapse collpase\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                Product\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/cart\" className=\"nav-link\">\r\n                                Cart\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/transaction\" className=\"nav-link\">\r\n                                Transactions\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" onClick={() => this.Logout()}>\r\n                                Logout\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;","import React from \"react\"\r\n\r\nclass ProductList extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"col-lg-6 col-sm-12 p-2\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body row\">\r\n                        {/* menampilkan Gambar / cover */}\r\n                        <div className=\"col-5\">\r\n                            <img src={this.props.image} className=\"img\"\r\n                            height=\"200\" width=\"200\" alt={this.props.name} />\r\n                        </div>\r\n\r\n                        {/* menampilkan deskripsi */}\r\n                        <div className=\"col-7\">\r\n                            <h5 className=\"text-info\">\r\n                                { this.props.name }\r\n                            </h5>\r\n                            <h6 className=\"text-danger\">\r\n                                Price: { this.props.price}\r\n                            </h6>\r\n                            <h6 className=\"text-dark\">\r\n                                Stock: { this.props.stock}\r\n                            </h6>\r\n\r\n                            {/* button untuk menambah ke keranjang belanja */}\r\n                            <button className=\"btn btn-sm btn-success m-1\"\r\n                            onClick={this.props.onCart}>\r\n                                Tambahkan ke keranjang belanja\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProductList;","import React from \"react\"\r\nimport Navbar from \"../components/Navbar\";\r\nimport ProductList from \"../components/ProductList\"\r\nimport { base_url, product_image_url } from \"../config.js\";\r\nimport axios from \"axios\"\r\n\r\nexport default class Product extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            products: [],\r\n            token: \"\",\r\n        }\r\n\r\n        if (localStorage.getItem(\"token\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n\r\n        this.headerConfig.bind(this)\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    getProduct = () => {\r\n        let url = base_url + \"/product\"\r\n        axios.get(url, this.headerConfig())\r\n        .then(response=> {\r\n            this.setState({products: response.data})\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                if(error.response.status) {\r\n                    window.alert(error.response.data.message)\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n            }else{\r\n                console.log(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    addToCart = (selectedItem) => {\r\n        // membuat sebuah variabel untuk menampung cart sementara\r\n        let tempCart = []\r\n\r\n        // cek eksistensi dari data cart pada localStorage\r\n        if(localStorage.getItem(\"cart\") !== null){\r\n            tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            // JSON.parse() digunakan untuk mengonversi dari string -> array object\r\n        }\r\n\r\n\r\n        // cek data yang dipilih user ke keranjang belanja\r\n        let existItem = tempCart.find(item => item.product_id === selectedItem.product_id)\r\n\r\n        if(existItem){\r\n            // jika item yang dipilih ada pada keranjang belanja\r\n            window.alert(`Anda telah memilih ${selectedItem.name}`)\r\n        }else{\r\n            // user diminta memasukkan jumlah item yang dibeli\r\n            let promptJumlah = window.prompt(`Masukkan jumlah ${selectedItem.name} yang beli`,\"\")\r\n            if(promptJumlah !== null && promptJumlah !== \"\"){\r\n                // jika user memasukkan jumlah item yg dibeli\r\n\r\n                // menambahkan properti \"jumlahBeli\" pada item yang dipilih\r\n                selectedItem.qty = promptJumlah\r\n                \r\n                // masukkan item yg dipilih ke dalam cart\r\n                tempCart.push(selectedItem)\r\n\r\n                // simpan array tempCart ke localStorage\r\n                localStorage.setItem(\"cart\", JSON.stringify(tempCart))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getProduct()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n               <Navbar />\r\n               <div className=\"container\">\r\n                   <h3 className=\"text-bold text-info mt-2\">Product List</h3>\r\n                   <div className=\"row\">\r\n                       { this.state.products.map( item => (\r\n                           <ProductList\r\n                           key = {item.product_id}\r\n                           name = {item.name}\r\n                           price = {item.price}\r\n                           stock = {item.stock}\r\n                           image = { product_image_url + \"/\" + item.image}\r\n                           onCart = {() => this.addToCart(item)}\r\n                            />\r\n                       )) }\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nexport default class TransactionList extends React.Component{\r\n    \r\n    getAmount = products => {\r\n        let total = 0\r\n        products.map(it => {\r\n            total += Number(it.price) * Number(it.qty)\r\n        })\r\n        return total\r\n    }\r\n\r\n    convertTime = time => {\r\n        let date = new Date(time)\r\n        return `${date.getDate()}/${Number(date.getMonth()) + 1}/${date.getFullYear()}`\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {/* list */}\r\n                <div className=\"card col-sm-12 my-1\">\r\n                    <div className=\"card-body row\">\r\n                        <div className=\"col-lg-4 col-sm-12\">\r\n                            <small className=\"text-info\">Customer</small>\r\n                            <h6>{this.props.customer_name}</h6>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-sm-12\">\r\n                            <small className=\"text-info\">Address</small>\r\n                            <h6>{this.props.customer_address}</h6>\r\n                        </div>\r\n                        <div className=\"col-lg-2 col-sm-12\">\r\n                            <small className=\"text-info\">Total Amount</small>\r\n                            <h6 className=\"text-danger\">Rp { this.getAmount(this.props.products) }</h6>\r\n                        </div>\r\n                        <div className=\"col-lg-2 col-sm-12\">\r\n                            <small className=\"text-bold text-info\">\r\n                                Time: { this.convertTime(this.props.time) }\r\n                            </small>\r\n                            <button className=\"btn btn-sm btn-block btn-success\" data-toggle=\"modal\"\r\n                            data-target={`#modalDetail${this.props.transaction_id}`}>\r\n                                Details\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* modal component */}\r\n                <div className=\"modal fade\" id={`modalDetail${this.props.transaction_id}`}>\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header bg-success text-white\">\r\n                                <h5>Detail of Transaction</h5>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <h5>Customer: {this.props.customer_name}</h5>\r\n                                <h6>Time: { this.convertTime(this.props.time) }</h6>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>#</th>\r\n                                            <th>Product</th>\r\n                                            <th>Price</th>\r\n                                            <th>Qty</th>\r\n                                            <th>Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        { this.props.products.map((item, index) => (\r\n                                            <tr key={item.product_id}>\r\n                                                <td>{`${index + 1}`}</td>\r\n                                                <td>{item.product.name}</td>\r\n                                                <td>Rp {item.price}</td>\r\n                                                <td>{item.qty}</td>\r\n                                                <td className=\"text-right\">Rp {item.price * item.qty}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        <tr>\r\n                                            <td colSpan=\"4\" className=\"text-danger text-bold\">\r\n                                                <h4>Total</h4>\r\n                                            </td>\r\n                                            <td className=\"text-right text-danger text-bold\">\r\n                                                <h4>\r\n                                                Rp { this.getAmount(this.props.products) }\r\n                                                </h4>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { base_url } from \"../config\";\r\nimport axios from \"axios\"\r\nimport TransactionList from \"../components/TransactionList\"\r\nimport Navbar from \"../components/Navbar\"\r\n\r\nexport default class Transaction extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            token: \"\",\r\n            customer: null,\r\n            transaction: [],\r\n        }\r\n\r\n        if (localStorage.getItem(\"token\") && localStorage.getItem(\"customer\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n            this.state.customer = JSON.parse(localStorage.getItem(\"customer\"))\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    getTransaction = () => {\r\n        let url = base_url + \"/transaksi/\" + this.state.customer.customer_id\r\n\r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n            this.setState({transaction: response.data})\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                if(error.response.status) {\r\n                    window.alert(error.response.data.message)\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n            }else{\r\n                console.log(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getTransaction()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n\r\n                <div className=\"container\">\r\n                    <h3 className=\"text-bold text-info mt-2\">Transactions List</h3>\r\n                    { this.state.transaction.map(item => (\r\n                        <TransactionList\r\n                        key = {item.transaksi_id}\r\n                        transaction_id = {item.transaksi_id}\r\n                        customer_name = {item.customer.name}\r\n                        customer_address = {item.customer.address}\r\n                        time = {item.waktu}\r\n                        products = {item.detail_transaksi}\r\n                         />\r\n                    )) }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport Navbar from \"../components/Navbar\"\r\nimport { base_url } from \"../config\";\r\nimport axios from \"axios\"\r\nclass Cart extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            token: \"\",\r\n            customerID: \"\",\r\n            customerName: \"\",\r\n            cart: [], // untuk menyimpan list cart\r\n            total: 0, // untuk menyimpan data total belanja\r\n        }\r\n\r\n        if(localStorage.getItem(\"token\")){\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        }else{\r\n            window.location = \"/login\"\r\n        }\r\n\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    initCart = () => {\r\n        // memanggil data cart pada localStorage\r\n        let tempCart = []\r\n        if(localStorage.getItem(\"cart\") !== null){\r\n            tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n\r\n        if(localStorage.getItem(\"customer\") !== null){\r\n            let customer = JSON.parse(localStorage.getItem(\"customer\"))\r\n            this.setState({\r\n                customerID: customer.customer_id,\r\n                customerName: customer.name\r\n            })\r\n        }\r\n\r\n        // kalkulasi total harga\r\n        let totalHarga = 0;\r\n        tempCart.map(item => {\r\n            totalHarga += (item.price * item.qty)\r\n        })\r\n\r\n        // memasukkan data cart, user, dan total harga pada state\r\n        this.setState({\r\n            cart: tempCart,\r\n            total: totalHarga\r\n        })\r\n    }\r\n\r\n    editItem = selectedItem => {\r\n        let tempCart = []\r\n        if(localStorage.getItem(\"cart\") !== null){\r\n            tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n\r\n        let index = tempCart.findIndex(it => it.product_id === selectedItem.product_id)\r\n        let promptJumlah = window.prompt(`Masukkan jumlah ${selectedItem.name} yang beli`,selectedItem.qty)\r\n        tempCart[index].qty = promptJumlah\r\n\r\n        // update localStorage\r\n        localStorage.setItem(\"cart\", JSON.stringify(tempCart))\r\n\r\n        // refersh cart\r\n        this.initCart()\r\n    }\r\n\r\n    dropItem = selectedItem => {\r\n        if (window.confirm(`Apakah anda yakin menghapus ${selectedItem.name} dari cart?`)) {\r\n            let tempCart = []\r\n            if(localStorage.getItem(\"cart\") !== null){\r\n                tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            }\r\n\r\n            let index = tempCart.findIndex(it => it.product_id === selectedItem.product_id)\r\n            tempCart.splice(index, 1)\r\n\r\n            // update localStorage\r\n            localStorage.setItem(\"cart\", JSON.stringify(tempCart))\r\n\r\n            // refersh cart\r\n            this.initCart()\r\n        }\r\n    }\r\n\r\n    checkOut = () => {\r\n        let tempCart = []\r\n        if(localStorage.getItem(\"cart\") !== null){\r\n            tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n\r\n        let data = {\r\n            customer_id: this.state.customerID,\r\n            detail_transaksi: tempCart\r\n        }\r\n\r\n        let url = base_url + \"/transaksi\"\r\n        \r\n\r\n        axios.post(url, data, this.headerConfig())\r\n        .then(response => {\r\n            // clear cart\r\n            window.alert(response.data.message)\r\n            localStorage.removeItem(\"cart\")\r\n            window.location = \"/transaction\"\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                if(error.response.status) {\r\n                    window.alert(error.response.data.message)\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n            }else{\r\n                console.log(error);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.initCart()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"card col-12 mt-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h4>Cart List</h4>\r\n                        </div>\r\n\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"text-primary\">\r\n                                Customer: { this.state.customerName }\r\n                            </h5>\r\n\r\n                            <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Product</th>\r\n                                        <th>Price</th>\r\n                                        <th>Qty</th>\r\n                                        <th>Total</th>\r\n                                        <th>Option</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    { this.state.cart.map( (item, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>{item.name}</td>\r\n                                            <td>Rp {item.price}</td>\r\n                                            <td>{item.qty}</td>\r\n                                            <td className=\"text-right\">\r\n                                                Rp { item.price * item.qty }\r\n                                            </td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-sm btn-info m-1\"\r\n                                                onClick={() => this.editItem(item)}>\r\n                                                    Edit\r\n                                                </button>\r\n\r\n                                                <button className=\"btn btn-sm btn-danger m-1\"\r\n                                                onClick={() => this.dropItem(item)}>\r\n                                                    Hapus\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ) ) }\r\n                                    <tr>\r\n                                        <td colSpan=\"3\">Total</td>\r\n                                        <td className=\"text-right\">Rp {this.state.total}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-sm btn-success btn-block m-1\"\r\n                                            onClick={() => this.checkOut()}\r\n                                            disabled={this.state.cart.length === 0}>\r\n                                                Checkout\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart;","import React from \"react\"\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./pages/Login\"\nimport Product from \"./pages/Product\"\nimport Transaction from \"./pages/Transaction\"\nimport Cart from \"./pages/Cart\"\n\nexport default class App extends React.Component{\n  render(){\n    return(\n      <Switch>\n        <Route exact path=\"/\" component={Product} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/transaction\" component={Transaction} />\n        <Route path=\"/cart\" component={Cart} />\n      </Switch>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap/dist/js/bootstrap.bundle\"\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename='/customer-toko-komputer'>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}